#!/bin/sh
#
# Validates code formatting for a set of given files. Checks for: trailing whitespace, use of tabs for
# indentations, and runs prettier
# Arguments:
#       A list of files or directories to check
#       (optional) a list of files or directories to ignore

[ -n "$1" ] || exit 0

temp_ignore_file=/tmp/whitespace_ignore_file
trap "rm -f $temp_ignore_file" EXIT
echo "$2" >"$temp_ignore_file"
sed -i 's|$|*|' "$temp_ignore_file"

env printf "\n\e[1;34m-----\n\u279C Checking whitespace\n-----\e[0m\n"

violations=0

# Validate no lines with trailing whitespace
whitespace_violations=0
files_with_whitespace=$(echo "$1" | xargs -I {} grep --extended-regexp "[[:blank:]]+$" --with-filename --only-matching --line-number --recursive --binary-files=without-match --exclude "*.svg" -- {})
while read -r line; do
    [ -n "$line" ] || continue

    filename=$(echo "$line" | cut -d ":" -f 1)
    line_number=$(echo "$line" | cut -d ":" -f 2)
    env printf "\e[1;31m\u274C\e[0m Trailing whitespace in %s (line %d)\n" "$filename" "$line_number" >&2
    whitespace_violations=$((whitespace_violations + 1))
    violations=$((violations + 1))
done <<EOF1
$(echo "$files_with_whitespace" | grep --invert-match --file="$temp_ignore_file" --)
EOF1

# Validate indentation uses only spaces, no tabs or mixed
indentation_violations=0
files_with_tabs=$(echo "$1" | xargs -I {} grep --perl '^\s*\t+' --with-filename --only-matching --line-number --recursive --binary-files=without-match --exclude "*.svg" -- {})
while read -r line; do
    [ -n "$line" ] || continue

    filename=$(echo "$line" | cut -d ":" -f 1)
    line_number=$(echo "$line" | cut -d ":" -f 2)
    env printf "\e[1;31m\u274C\e[0m Tab indentation found in %s (line %d)\n" "$filename" "$line_number" >&2
    indentation_violations=$((indentation_violations + 1))
    violations=$((violations + 1))
done <<EOF2
$(echo "$files_with_tabs" | grep --invert-match --file="$temp_ignore_file" --)
EOF2

if [ $whitespace_violations -eq 0 ]; then
    env printf "\e[1;32m\u2713\e[0m No trailing whitespace issues found\n"
else
    env printf "\n\e[1;31m\xE2\x9D\x8C %s total trailing whitespace problems\e[0m\n" "$whitespace_violations" >&2
    env printf "\e[1;33m\u2BC5\e[0m Remove any spaces at the end of indicated lines\n"
fi

if [ $indentation_violations -eq 0 ]; then
    env printf "\e[1;32m\u2713\e[0m No tab indentation issues found\n"
else
    env printf "\n\e[1;31m\xE2\x9D\x8C %s total tab indentation problems\e[0m\n" "$indentation_violations" >&2
    env printf "\e[1;33m\u2BC5\e[0m Change all indicated lines to use only space-based indentation\n"
fi

[ $violations -eq 0 ] || exit 1
